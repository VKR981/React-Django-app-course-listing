{"version":3,"sources":["actions/auth.jsx","actions/types.jsx","comps/Navbar.jsx","comps/card.jsx","comps/content.jsx","comps/login_register.jsx","actions/messages.jsx","comps/post_new_course.jsx","actions/courseactions.jsx","comps/course_page.jsx","actions/comments.jsx","App.jsx","serviceWorker.js","reducers/comment.jsx","reducers/course.jsx","reducers/index.js","reducers/auth.jsx","reducers/message.jsx","store.jsx","index.jsx"],"names":["Setlogintotrue","data","dispatch","a","type","payload","getTokenConfig","getState","token","loginstate","config","headers","Navbar","history","useHistory","useDispatch","useSelector","state","username","useState","activeItem","className","Menu","secondary","inverted","Item","name","active","onClick","push","position","Input","icon","placeholder","Coursecard","title","from","desc","slug","id","Card","header","meta","description","length","slice","e","Content","courses1","Course","courses","Grid","doubling","columns","map","c","Column","key","_from","link","Login_register","password","email","password2","formData","setFormData","form","setForm","onchange","value","prevstate","Form","onChange","Button","body","JSON","stringify","Axios","post","then","res","user","localStorage","setItem","catch","alert","response","createMessage","msg","returnErrors","status","clearmessage","Post_new_course","message","Message","useParams","useEffect","get","postcourse","updatecourse","Group","widths","Field","control","label","TextArea","content","course","patch","err","console","log","Course_page","comments","Comment","review","setCourse","getcomments","deletecourse","style","color","window","open","size","delete","Header","as","primary","comment","postcomment","Author","Metadata","Date","datetime","toDateString","Text","Actions","Action","deletecomment","App","getItem","Authorization","exact","path","component","Postnewcourse","Coursepage","Boolean","location","hostname","match","initialstate","combineReducers","action","removeItem","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a9e535a8.chunk.js","sourcesContent":["import { Loginstate, Setloginfalse, Setlogintrue } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const Setlogintofalse = () => async (dispatch) => {\r\n  dispatch({\r\n    type: Setloginfalse,\r\n  });\r\n};\r\n\r\nexport const Setlogintotrue = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: Setlogintrue,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getTokenConfig = (getState) => {\r\n  const token = getState().loginstate.token;\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Token ${token}`;\r\n  }\r\n  return config;\r\n};\r\n","// Auth\r\nexport const Loginstate = \"Loginstat\";\r\nexport const Setlogintrue = \"Setlogintrue\";\r\nexport const Setloginfalse = \"Setloginfalse\";\r\n\r\n// Course\r\nexport const GET_COURSES = \"GET_COURSES\";\r\nexport const POST_COURSE = \"POST_COURSE\";\r\nexport const DELETE_COURSE = \"DELETE_COURSE\";\r\nexport const UPDATE_COURSE = \"DELETE_COURSE\";\r\n\r\n// Comment\r\nexport const GET_COMMENTS = \"GET_COMMENTS\";\r\nexport const POST_COMMENT = \"POST_COMMENT\";\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\r\nexport const UPDATE_COMMENT = \"DELETE_COMMENT\";\r\n\r\n// Messages\r\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","import React, { useState } from \"react\";\r\nimport { Input, Menu } from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Setlogintofalse } from \"../actions/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function Navbar() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const loginstate = useSelector((state) => state.loginstate.state);\r\n  const username = useSelector((state) => state.loginstate.username);\r\n\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Menu secondary inverted>\r\n        <Menu.Item\r\n          name=\"home\"\r\n          active={activeItem === \"home\"}\r\n          onClick={() => history.push(\"/\")}\r\n        />\r\n\r\n        <Menu.Item\r\n          name=\"post new course\"\r\n          active={activeItem === \"post new course\"}\r\n          onClick={() => history.push(\"/post-course\")}\r\n        />\r\n        {loginstate && <Menu.Item name={`Welcome,${username}`} />}\r\n\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item>\r\n            <Input icon=\"search\" placeholder=\"Search...\" />\r\n          </Menu.Item>\r\n          {loginstate && (\r\n            <Menu.Item\r\n              name=\"logout\"\r\n              active={activeItem === \"logout\"}\r\n              onClick={() => dispatch(Setlogintofalse())}\r\n            />\r\n          )}\r\n          {!loginstate && (\r\n            <Menu.Item\r\n              name=\"login\"\r\n              active={activeItem === \"logout\"}\r\n              onClick={() => history.push(\"/login\")}\r\n            ></Menu.Item>\r\n          )}\r\n        </Menu.Menu>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function Coursecard({ title, from, desc, slug, id }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        header={title}\r\n        meta={from}\r\n        description={desc.length > 140 ? desc.slice(0, 140) + \"...\" : desc}\r\n        onClick={(e) => history.push(`/course/${slug}`)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"./card\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Content() {\r\n  const courses1 = useSelector((state) => state.Course.courses);\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <Grid doubling columns={5}>\r\n        {courses1.map((c) => (\r\n          <Grid.Column key={c.id}>\r\n            <Card\r\n              title={c.title}\r\n              from={c._from}\r\n              desc={c.desc}\r\n              link={c.link}\r\n              username={c.username}\r\n              slug={c.slug}\r\n              key={c.id}\r\n            />\r\n          </Grid.Column>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Checkbox, Form } from \"semantic-ui-react\";\r\nimport { Setlogintotrue } from \"../actions/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function Login_register() {\r\n  const [formData, setFormData] = useState({\r\n    username: \"Visitor\",\r\n    password: \"asdfgh\",\r\n    email: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [form, setForm] = useState(\"login\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const registeruser = () => {\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const username = formData.username;\r\n    const email = formData.email;\r\n    const password = formData.password;\r\n    const body = JSON.stringify({ username, email, password });\r\n\r\n    if (password !== formData.password2) {\r\n      alert(\"password do not match\");\r\n      return 0;\r\n    }\r\n\r\n    Axios.post(\"/api/auth/register\", body, config)\r\n      .then((res) => {\r\n        dispatch(\r\n          Setlogintotrue({\r\n            token: res.data.token,\r\n            username: res.data.user.username,\r\n          })\r\n        );\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((e) => alert(JSON.stringify(e.response.data)));\r\n  };\r\n  const loginuser = () => {\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const username = formData.username;\r\n    const password = formData.password;\r\n    const body = JSON.stringify({ username, password });\r\n\r\n    Axios.post(\"/api/auth/login\", body, config)\r\n      .then((res) => {\r\n        dispatch(\r\n          Setlogintotrue({\r\n            token: res.data.token,\r\n            username: res.data.user.username,\r\n          })\r\n        );\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((e) => alert(JSON.stringify(e.response.data)));\r\n  };\r\n\r\n  const onchange = (e, { name, value }) => {\r\n    setFormData((prevstate) => {\r\n      return { ...prevstate, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      {/* Login form */}\r\n\r\n      {form === \"login\" && (\r\n        <Form>\r\n          <Form.Input\r\n            placeholder=\"User name\"\r\n            onChange={onchange}\r\n            name=\"username\"\r\n            value={formData.username}\r\n          />\r\n\r\n          <Form.Input\r\n            placeholder=\"Password\"\r\n            onChange={onchange}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={formData.password}\r\n          />\r\n\r\n          <Button type=\"submit\" onClick={loginuser}>\r\n            Login\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              setForm(\"register\");\r\n              setFormData({\r\n                username: \"\",\r\n                password: \"\",\r\n                email: \"\",\r\n                password2: \"\",\r\n              });\r\n            }}\r\n          >\r\n            Register\r\n          </Button>\r\n        </Form>\r\n      )}\r\n\r\n      {/* Registration form */}\r\n\r\n      {form === \"register\" && (\r\n        <Form>\r\n          <Form.Input\r\n            placeholder=\"User name\"\r\n            onChange={onchange}\r\n            name=\"username\"\r\n          />\r\n          <Form.Input placeholder=\"Email\" onChange={onchange} name=\"email\" />\r\n          <Form.Input\r\n            placeholder=\"Password\"\r\n            onChange={onchange}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <Form.Input\r\n            placeholder=\"Re-enter password\"\r\n            onChange={onchange}\r\n            name=\"password2\"\r\n            type=\"password\"\r\n          />\r\n\r\n          <Button type=\"submit\" onClick={registeruser}>\r\n            Register\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              setForm(\"login\");\r\n              setFormData({\r\n                username: \"Visitor\",\r\n                password: \"asdfgh\",\r\n                email: \"\",\r\n                password2: \"\",\r\n              });\r\n            }}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { CREATE_MESSAGE, GET_ERRORS, CLEAR_MESSAGE } from \"./types\";\r\n\r\n// CREATE MESSAGE\r\nexport const createMessage = (msg) => {\r\n  return {\r\n    type: CREATE_MESSAGE,\r\n    payload: msg,\r\n  };\r\n};\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status },\r\n  };\r\n};\r\n\r\nexport const clearmessage = (msg, status) => {\r\n  return {\r\n    type: CLEAR_MESSAGE,\r\n    payload: { msg, status },\r\n  };\r\n};\r\n","import Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, TextArea, Button, Select } from \"semantic-ui-react\";\r\nimport { getTokenConfig } from \"../actions/auth\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { updatecourse, postcourse } from \"../actions/courseactions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { clearmessage } from \"../actions/messages\";\r\n\r\nexport default function Post_new_course() {\r\n  const history = useHistory();\r\n  const message = useSelector((state) => state.Message);\r\n  const dispatch = useDispatch();\r\n  const { slug } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    _from: \"\",\r\n    desc: \"\",\r\n    link: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (slug) {\r\n      Axios.get(`/api/v1/course/${slug}/?format=json`).then((res) =>\r\n        setFormData(res.data)\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (message.status === 400) {\r\n      alert(JSON.stringify(message.msg));\r\n    } else if (message.postcourse || message.updatecourse) {\r\n      setFormData({\r\n        title: \"\",\r\n        _from: \"\",\r\n        desc: \"\",\r\n        link: \"\",\r\n      });\r\n\r\n      history.push(\"/\");\r\n    }\r\n    dispatch(clearmessage());\r\n  }, [message]);\r\n\r\n  const handlesubmit = () => {\r\n    const body = JSON.stringify(formData);\r\n    if (slug) {\r\n      dispatch(updatecourse(slug, body));\r\n    } else {\r\n      const a = dispatch(postcourse(body));\r\n      console.log(a);\r\n    }\r\n  };\r\n\r\n  const onchange = (e, { name, value }) => {\r\n    setFormData((prevstate) => {\r\n      return { ...prevstate, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-course-form\">\r\n      <Form>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field\r\n            id=\"form-input-control-first-name\"\r\n            control={Input}\r\n            label=\"Course name\"\r\n            placeholder=\"Course name\"\r\n            name=\"title\"\r\n            onChange={onchange}\r\n            value={formData.title}\r\n          />\r\n          <Form.Field\r\n            id=\"form-input-control-last-name\"\r\n            control={Input}\r\n            label=\"From\"\r\n            placeholder=\"From\"\r\n            name=\"_from\"\r\n            onChange={onchange}\r\n            value={formData._from}\r\n          />\r\n        </Form.Group>\r\n        <Form.Field\r\n          id=\"form-textarea-control-opinion\"\r\n          control={TextArea}\r\n          label=\"Description\"\r\n          placeholder=\"Description\"\r\n          name=\"desc\"\r\n          onChange={onchange}\r\n          value={formData.desc}\r\n        />\r\n        <Form.Field\r\n          id=\"form-input-control-error-email\"\r\n          control={Input}\r\n          label=\"Link\"\r\n          placeholder=\"https://\"\r\n          name=\"link\"\r\n          onChange={onchange}\r\n          value={formData.link}\r\n        />\r\n        <Form.Field\r\n          id=\"form-button-control-public\"\r\n          control={Button}\r\n          content=\"Submit\"\r\n          onClick={handlesubmit}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  GET_COURSES,\r\n  POST_COURSE,\r\n  DELETE_COURSE,\r\n  UPDATE_COURSE,\r\n} from \"./types\";\r\nimport { getTokenConfig } from \"./auth\";\r\nimport Axios from \"axios\";\r\nimport { createMessage, returnErrors } from \"./messages\";\r\n\r\nexport const getcourses = () => (dispatch) => {\r\n  Axios.get(\"/api/v1/course/?format=json\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_COURSES,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const postcourse = (course) => (dispatch, token) => {\r\n  Axios.post(\"/api/v1/course/\", course, getTokenConfig(token))\r\n    .then((res) => {\r\n      dispatch(createMessage({ postcourse: \"course posted\" }));\r\n      dispatch({\r\n        type: POST_COURSE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const deletecourse = (slug) => (dispatch, token) => {\r\n  Axios.delete(`/api/v1/course/${slug}`, getTokenConfig(token))\r\n    .then((res) => {\r\n      dispatch(createMessage({ deletecourse: \"course deleted\" }));\r\n      dispatch({\r\n        type: DELETE_COURSE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const updatecourse = (slug, course) => (dispatch, token) => {\r\n  Axios.patch(`/api/v1/course/${slug}/`, course, getTokenConfig(token))\r\n    .then((res) => {\r\n      dispatch(createMessage({ updatecourse: \"course updated\" }));\r\n      dispatch({\r\n        type: DELETE_COURSE,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: POST_COURSE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n","import Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, Checkbox, Form, Comment, Header } from \"semantic-ui-react\";\r\nimport { postcomment, getcomments, deletecomment } from \"../actions/comments\";\r\nimport { clearmessage } from \"../actions/messages\";\r\nimport { deletecourse } from \"../actions/courseactions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function Course_page() {\r\n  const history = useHistory();\r\n  const comments = useSelector((state) => state.Comment.comments);\r\n  const username = useSelector((state) => state.loginstate.username);\r\n  const message = useSelector((state) => state.Message);\r\n  const dispatch = useDispatch();\r\n  const [formData, setFormData] = useState({ review: \"\" });\r\n  const { slug } = useParams();\r\n  const [course, setCourse] = useState({});\r\n\r\n  useEffect(() => {\r\n    Axios.get(`/api/v1/course/${slug}/?format=json`).then((res) =>\r\n      setCourse(res.data)\r\n    );\r\n\r\n    dispatch(getcomments(slug));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (message.status === 400) {\r\n      alert(JSON.stringify(message.msg));\r\n    } else if (message.deletecourse) {\r\n      history.push(\"/\");\r\n    } else {\r\n      setFormData({ review: \"\" });\r\n    }\r\n    dispatch(clearmessage());\r\n  }, [message]);\r\n\r\n  const handelsubmit = () => {\r\n    dispatch(postcomment({ comment: formData.review, course: course.slug }));\r\n  };\r\n\r\n  const onchange = (e, { name, value }) => {\r\n    setFormData((prevstate) => {\r\n      return { ...prevstate, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"course-page\">\r\n      <h2>{course.title}</h2>\r\n      <p style={{ color: \"gray\" }}>By: {course._from}</p>\r\n      <p>{course.desc}</p>\r\n\r\n      <Button onClick={() => window.open(course.link, \"_blank\")} size=\"mini\">\r\n        Visit\r\n      </Button>\r\n      {username === course.username && (\r\n        <Button onClick={(e) => history.push(`/edit/${slug}`)} size=\"mini\">\r\n          Edit\r\n        </Button>\r\n      )}\r\n      {username === course.username && (\r\n        <Button onClick={(e) => dispatch(deletecourse(slug))} size=\"mini\">\r\n          Delete\r\n        </Button>\r\n      )}\r\n      <Comment.Group>\r\n        <Header as=\"h3\">Comments</Header>\r\n        <Form>\r\n          <Form.TextArea\r\n            value={formData.review}\r\n            name=\"review\"\r\n            onChange={onchange}\r\n          />\r\n\r\n          <Form.Button primary onClick={handelsubmit}>\r\n            Submit\r\n          </Form.Button>\r\n        </Form>\r\n        {comments.map((c) => (\r\n          <Comment>\r\n            <Comment.Content className=\"comment\">\r\n              <Comment.Author as=\"a\">{c.username}</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>{new Date(c.datetime).toDateString()}</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>{c.comment}</Comment.Text>\r\n              <Comment.Actions>\r\n                {/* <Comment.Action>Reply</Comment.Action> */}\r\n                {username === c.username && (\r\n                  <Comment.Action\r\n                    onClick={(e) => {\r\n                      dispatch(deletecomment(c.id));\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Comment.Action>\r\n                )}\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n        ))}\r\n      </Comment.Group>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  GET_COMMENTS,\r\n  POST_COMMENT,\r\n  DELETE_COMMENT,\r\n  UPDATE_COMMENT,\r\n} from \"./types\";\r\nimport { getTokenConfig } from \"./auth\";\r\nimport Axios from \"axios\";\r\nimport { createMessage, returnErrors } from \"./messages\";\r\n\r\nexport const getcomments = (slug) => (dispatch) => {\r\n  Axios.get(`/api/v1/comment/?course=${slug}&format=json`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_COMMENTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const postcomment = (comment) => (dispatch, getState) => {\r\n  Axios.post(\"/api/v1/comment/\", comment, getTokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch(createMessage({ postcomment: \"comment posted\" }));\r\n      dispatch({\r\n        type: POST_COMMENT,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const deletecomment = (id) => (dispatch, token) => {\r\n  Axios.delete(`/api/v1/comment/${id}/`, getTokenConfig(token))\r\n    .then((res) => {\r\n      dispatch(createMessage({ deletecomment: \"comment deleted\" }));\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: DELETE_COMMENT,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const updatecomment = (slug, comment) => (dispatch, token) => {\r\n  Axios.post(`/api/v1/comment/${slug}`, comment, getTokenConfig(token))\r\n    .then((res) => {\r\n      dispatch(createMessage({ updatecomment: \"comment updated\" }));\r\n      dispatch({\r\n        type: UPDATE_COMMENT,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n","import React, { Fragment, useEffect } from \"react\";\nimport Navbar from \"./comps/Navbar\";\nimport Content from \"./comps/content\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login_register from \"./comps/login_register\";\nimport { Setlogintotrue } from \"./actions/auth\";\nimport { useDispatch } from \"react-redux\";\nimport Postnewcourse from \"./comps/post_new_course\";\nimport Coursepage from \"./comps/course_page\";\nimport { getcourses } from \"./actions/courseactions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getcourses());\n\n    const token = localStorage.getItem(\"token\");\n    const config = { headers: { Authorization: `Token ${token}` } };\n    if (token) {\n      Axios.get(\"/api/auth/user\", config)\n        .then((res) => {\n          dispatch(\n            Setlogintotrue({ token: token, username: res.data.username })\n          );\n        })\n        .catch((e) => console.log(e));\n    }\n  }, []);\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Fragment>\n          <Switch>\n            <Route exact path=\"/\" component={Content} />\n            <Route exact path=\"/login\" component={Login_register} />\n            <Route exact path=\"/post-course\" component={Postnewcourse} />\n            <Route exact path=\"/edit/:slug\" component={Postnewcourse} />\n            <Route exact path=\"/course/:slug\" component={Coursepage} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  GET_COMMENTS,\r\n  POST_COMMENT,\r\n  DELETE_COMMENT,\r\n  UPDATE_COMMENT,\r\n} from \"../actions/types\";\r\n\r\nconst initialstate = { comments: [] };\r\n\r\nexport default function (state = initialstate, action) {\r\n  switch (action.type) {\r\n    case GET_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.payload,\r\n      };\r\n    case DELETE_COMMENT:\r\n      return {\r\n        ...state,\r\n        comments: state.comments.filter(\r\n          (comment) => comment.id !== action.payload.id\r\n        ),\r\n      };\r\n    case POST_COMMENT:\r\n      return {\r\n        ...state,\r\n        comments: [...state.comments, action.payload],\r\n      };\r\n    case UPDATE_COMMENT:\r\n      return {\r\n        ...state,\r\n        comments: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_COURSES,\r\n  POST_COURSE,\r\n  DELETE_COURSE,\r\n  UPDATE_COURSE,\r\n} from \"../actions/types\";\r\n\r\nconst initialstate = { courses: [] };\r\n\r\nexport default function (state = initialstate, action) {\r\n  switch (action.type) {\r\n    case GET_COURSES:\r\n      return {\r\n        ...state,\r\n        courses: action.payload,\r\n      };\r\n    case DELETE_COURSE:\r\n      return {\r\n        ...state,\r\n        courses: state.courses.filter(\r\n          (course) => course.id !== action.payload.id\r\n        ),\r\n      };\r\n    case POST_COURSE:\r\n      return {\r\n        ...state,\r\n        courses: [...state.courses, action.payload],\r\n      };\r\n    case UPDATE_COURSE:\r\n      return {\r\n        ...state,\r\n        courses: [...state.courses, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  combineReducers\r\n} from \"redux\";\r\nimport Auth from \"./auth\";\r\nimport Comment from './comment'\r\nimport Message from './message'\r\nimport Course from './course'\r\n\r\nexport default combineReducers({\r\n  loginstate: Auth,\r\n  Course,\r\n  Comment,\r\n  Message,\r\n});","import { Setloginfalse, Setlogintrue } from \"../actions/types\";\r\n\r\nexport default function (\r\n  state = { state: false, token: \"\", username: \"\" },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case Setlogintrue: {\r\n      return {\r\n        state: true,\r\n        token: action.payload.token,\r\n        username: action.payload.username,\r\n      };\r\n    }\r\n\r\n    case Setloginfalse: {\r\n      localStorage.removeItem(\"token\");\r\n      return { state: false, token: \"\", username: \"\" };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CREATE_MESSAGE, GET_ERRORS, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = \"\";\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_MESSAGE:\r\n      return (state = action.payload);\r\n    case GET_ERRORS:\r\n      return (state = action.payload);\r\n    case CLEAR_MESSAGE:\r\n      return \"\";\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}