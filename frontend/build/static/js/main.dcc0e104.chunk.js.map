{"version":3,"sources":["actions/auth.jsx","actions/types.jsx","comps/Navbar.jsx","comps/card.jsx","actions/messages.jsx","comps/content.jsx","actions/courseactions.jsx","comps/login_register.jsx","comps/post_new_course.jsx","comps/course_page.jsx","actions/comments.jsx","App.jsx","serviceWorker.js","reducers/comment.jsx","reducers/course.jsx","reducers/index.js","reducers/auth.jsx","reducers/message.jsx","store.jsx","index.jsx"],"names":["Setlogintotrue","data","dispatch","a","type","payload","getTokenConfig","getState","token","loginstate","config","headers","Navbar","history","useHistory","useDispatch","useSelector","state","username","useState","activeItem","className","Menu","secondary","inverted","Item","name","active","onClick","push","position","Input","icon","placeholder","Coursecard","title","from","desc","slug","Card","header","meta","description","length","slice","e","createMessage","msg","returnErrors","status","clearmessage","Content","Course","courses","setCourses","useEffect","Axios","get","then","res","catch","err","response","Grid","doubling","columns","map","c","Column","_from","link","Login_register","password","email","password2","formData","setFormData","form","setForm","onchange","value","prevstate","Form","onChange","Button","body","JSON","stringify","post","user","localStorage","setItem","alert","Post_new_course","message","Message","useParams","postcourse","updatecourse","Group","widths","Field","id","control","label","TextArea","content","course","patch","console","log","Course_page","comments","Comment","review","setCourse","getcomments","deletecourse","window","open","size","delete","Header","as","primary","comment","postcomment","Author","Metadata","Date","datetime","toDateString","Text","Actions","Action","deletecomment","App","getItem","Authorization","exact","path","component","Postnewcourse","Coursepage","Boolean","location","hostname","match","initialstate","combineReducers","action","removeItem","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.dcc0e104.chunk.js","sourcesContent":["import { Loginstate, Setloginfalse, Setlogintrue } from \"./types\";\r\nimport axios from \"axios\";\r\n\r\nexport const Setlogintofalse = () => async (dispatch) => {\r\n  dispatch({\r\n    type: Setloginfalse,\r\n  });\r\n};\r\n\r\nexport const Setlogintotrue = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: Setlogintrue,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const getTokenConfig = (getState) => {\r\n  const token = getState().loginstate.token;\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Token ${token}`;\r\n  }\r\n  return config;\r\n};\r\n","// Auth\r\nexport const Loginstate = \"Loginstat\";\r\nexport const Setlogintrue = \"Setlogintrue\";\r\nexport const Setloginfalse = \"Setloginfalse\";\r\n\r\n// Course\r\nexport const GET_COURSES = \"GET_COURSES\";\r\nexport const POST_COURSE = \"POST_COURSE\";\r\nexport const DELETE_COURSE = \"DELETE_COURSE\";\r\nexport const UPDATE_COURSE = \"DELETE_COURSE\";\r\n\r\n// Comment\r\nexport const GET_COMMENTS = \"GET_COMMENTS\";\r\nexport const POST_COMMENT = \"POST_COMMENT\";\r\nexport const DELETE_COMMENT = \"DELETE_COMMENT\";\r\nexport const UPDATE_COMMENT = \"DELETE_COMMENT\";\r\n\r\n// Messages\r\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n","import React, { useState } from \"react\";\r\nimport { Input, Menu } from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Setlogintofalse } from \"../actions/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function Navbar() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const loginstate = useSelector((state) => state.loginstate.state);\r\n  const username = useSelector((state) => state.loginstate.username);\r\n\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Menu secondary inverted>\r\n        <Menu.Item\r\n          name=\"home\"\r\n          active={activeItem === \"home\"}\r\n          onClick={() => history.push(\"/\")}\r\n        />\r\n\r\n        <Menu.Item\r\n          name=\"post new course\"\r\n          active={activeItem === \"post new course\"}\r\n          onClick={() => history.push(\"/post-course\")}\r\n        />\r\n        {loginstate && <Menu.Item name={`Welcome,${username}`} />}\r\n\r\n        <Menu.Menu position=\"right\">\r\n          <Menu.Item>\r\n            <Input icon=\"search\" placeholder=\"Search...\" />\r\n          </Menu.Item>\r\n          {loginstate && (\r\n            <Menu.Item\r\n              name=\"logout\"\r\n              active={activeItem === \"logout\"}\r\n              onClick={() => dispatch(Setlogintofalse())}\r\n            />\r\n          )}\r\n          {!loginstate && (\r\n            <Menu.Item\r\n              name=\"login\"\r\n              active={activeItem === \"logout\"}\r\n              onClick={() => history.push(\"/login\")}\r\n            ></Menu.Item>\r\n          )}\r\n        </Menu.Menu>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function Coursecard({ title, from, desc, slug }) {\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <Card\r\n        header={title}\r\n        meta={from}\r\n        description={desc.length > 140 ? desc.slice(0, 140) + \"...\" : desc}\r\n        onClick={(e) => history.push(`/course/${slug}`)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { CREATE_MESSAGE, GET_ERRORS, CLEAR_MESSAGE } from \"./types\";\r\n\r\n// CREATE MESSAGE\r\nexport const createMessage = (msg) => {\r\n  return {\r\n    type: CREATE_MESSAGE,\r\n    payload: msg,\r\n  };\r\n};\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status },\r\n  };\r\n};\r\n\r\nexport const clearmessage = (msg, status) => {\r\n  return {\r\n    type: CLEAR_MESSAGE,\r\n    payload: { msg, status },\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./card\";\r\nimport Axios from \"axios\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getcourses } from \"../actions/courseactions\";\r\n\r\nexport default function Content() {\r\n  const dispatch = useDispatch();\r\n  const courses1 = useSelector((state) => state.Course);\r\n  const [courses, setCourses] = useState([]);\r\n  useEffect(() => {\r\n    Axios.get(\"http://127.0.0.1:8000/api/v1/course/?format=json\").then((res) =>\r\n      setCourses(res.data)\r\n    );\r\n    dispatch(getcourses());\r\n  }, []);\r\n  const data = [\r\n    {\r\n      title: \"CS50’s Web Programming with Python and JavaScript\",\r\n      from: \"Harvar and Yale\",\r\n      desc:\r\n        \"This course picks up where Harvard University’s CS50 leaves off, diving more deeply into the design and implementation of web apps with Python, JavaScript, and SQL...\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <Grid doubling columns={5}>\r\n        {courses.map((c) => (\r\n          <Grid.Column>\r\n            <Card\r\n              title={c.title}\r\n              from={c._from}\r\n              desc={c.desc}\r\n              link={c.link}\r\n              username={c.username}\r\n              slug={c.slug}\r\n            />\r\n          </Grid.Column>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  GET_COURSES,\r\n  POST_COURSE,\r\n  DELETE_COURSE,\r\n  UPDATE_COURSE,\r\n} from \"./types\";\r\nimport { getTokenConfig } from \"./auth\";\r\nimport Axios from \"axios\";\r\nimport { createMessage, returnErrors } from \"./messages\";\r\n\r\nexport const getcourses = () => (dispatch) => {\r\n  Axios.get(\"http://127.0.0.1:8000/api/v1/course/?format=json\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_COURSES,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const postcourse = (course) => (dispatch, token) => {\r\n  Axios.post(\r\n    \"http://127.0.0.1:8000/api/v1/course/\",\r\n    course,\r\n    getTokenConfig(token)\r\n  )\r\n    .then((res) => {\r\n      dispatch(createMessage({ postcourse: \"course posted\" }));\r\n      dispatch({\r\n        type: POST_COURSE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const deletecourse = (slug) => (dispatch, token) => {\r\n  Axios.delete(\r\n    `http://127.0.0.1:8000/api/v1/course/${slug}`,\r\n    getTokenConfig(token)\r\n  )\r\n    .then((res) => {\r\n      dispatch(createMessage({ deletecourse: \"course deleted\" }));\r\n      dispatch({\r\n        type: DELETE_COURSE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const updatecourse = (slug, course) => (dispatch, token) => {\r\n  Axios.patch(\r\n    `http://127.0.0.1:8000/api/v1/course/${slug}/`,\r\n    course,\r\n    getTokenConfig(token)\r\n  )\r\n    .then((res) => {\r\n      dispatch(createMessage({ updatecourse: \"course updated\" }));\r\n      dispatch({\r\n        type: UPDATE_COURSE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n","import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Checkbox, Form } from \"semantic-ui-react\";\r\nimport { Setlogintotrue } from \"../actions/auth\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function Login_register() {\r\n  const [formData, setFormData] = useState({\r\n    username: \"Visitor\",\r\n    password: \"asdfgh\",\r\n    email: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [form, setForm] = useState(\"login\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const registeruser = () => {\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const username = formData.username;\r\n    const email = formData.email;\r\n    const password = formData.password;\r\n    const body = JSON.stringify({ username, email, password });\r\n\r\n    Axios.post(\"http://127.0.0.1:8000/api/auth/register\", body, config)\r\n      .then((res) => {\r\n        dispatch(\r\n          Setlogintotrue({\r\n            token: res.data.token,\r\n            username: res.data.user.username,\r\n          })\r\n        );\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((e) => alert(JSON.stringify(e.response.data)));\r\n  };\r\n  const loginuser = () => {\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const username = formData.username;\r\n    const password = formData.password;\r\n    const body = JSON.stringify({ username, password });\r\n\r\n    Axios.post(\"/api/auth/login\", body, config)\r\n      .then((res) => {\r\n        dispatch(\r\n          Setlogintotrue({\r\n            token: res.data.token,\r\n            username: res.data.user.username,\r\n          })\r\n        );\r\n        localStorage.setItem(\"token\", res.data.token);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((e) => alert(JSON.stringify(e.response.data)));\r\n  };\r\n\r\n  const onchange = (e, { name, value }) => {\r\n    setFormData((prevstate) => {\r\n      return { ...prevstate, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-form\">\r\n      {/* Login form */}\r\n\r\n      {form === \"login\" && (\r\n        <Form>\r\n          <Form.Input\r\n            placeholder=\"User name\"\r\n            onChange={onchange}\r\n            name=\"username\"\r\n            value={formData.username}\r\n          />\r\n\r\n          <Form.Input\r\n            placeholder=\"Password\"\r\n            onChange={onchange}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={formData.password}\r\n          />\r\n\r\n          <Button type=\"submit\" onClick={loginuser}>\r\n            Login\r\n          </Button>\r\n          <Button type=\"submit\" onClick={() => setForm(\"register\")}>\r\n            Register\r\n          </Button>\r\n        </Form>\r\n      )}\r\n\r\n      {/* Registration form */}\r\n\r\n      {form === \"register\" && (\r\n        <Form>\r\n          <Form.Input\r\n            placeholder=\"User name\"\r\n            onChange={onchange}\r\n            name=\"username\"\r\n          />\r\n          <Form.Input placeholder=\"Email\" onChange={onchange} name=\"email\" />\r\n          <Form.Input\r\n            placeholder=\"Password\"\r\n            onChange={onchange}\r\n            name=\"password\"\r\n            type=\"password\"\r\n          />\r\n          <Form.Input\r\n            placeholder=\"Re-enter password\"\r\n            onChange={onchange}\r\n            name=\"password2\"\r\n            type=\"password\"\r\n          />\r\n\r\n          <Button type=\"submit\" onClick={registeruser}>\r\n            Register\r\n          </Button>\r\n          <Button type=\"submit\" onClick={() => setForm(\"login\")}>\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, TextArea, Button, Select } from \"semantic-ui-react\";\r\nimport { getTokenConfig } from \"../actions/auth\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { updatecourse, postcourse } from \"../actions/courseactions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { clearmessage } from \"../actions/messages\";\r\n\r\nexport default function Post_new_course() {\r\n  const history = useHistory();\r\n  const message = useSelector((state) => state.Message);\r\n  const dispatch = useDispatch();\r\n  const { slug } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    _from: \"\",\r\n    desc: \"\",\r\n    link: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (slug) {\r\n      Axios.get(\r\n        `http://127.0.0.1:8000/api/v1/course/${slug}/?format=json`\r\n      ).then((res) => setFormData(res.data));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (message.status === 400) {\r\n      alert(JSON.stringify(message.msg));\r\n    } else if (message.postcourse || message.updatecourse) {\r\n      setFormData({\r\n        title: \"\",\r\n        _from: \"\",\r\n        desc: \"\",\r\n        link: \"\",\r\n      });\r\n\r\n      history.push(\"/\");\r\n    }\r\n    dispatch(clearmessage());\r\n  }, [message]);\r\n\r\n  const handlesubmit = () => {\r\n    const body = JSON.stringify(formData);\r\n    if (slug) {\r\n      dispatch(updatecourse(slug, body));\r\n    } else {\r\n      const a = dispatch(postcourse(body));\r\n      console.log(a);\r\n    }\r\n  };\r\n\r\n  const onchange = (e, { name, value }) => {\r\n    setFormData((prevstate) => {\r\n      return { ...prevstate, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-course-form\">\r\n      <Form>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field\r\n            id=\"form-input-control-first-name\"\r\n            control={Input}\r\n            label=\"Course name\"\r\n            placeholder=\"Course name\"\r\n            name=\"title\"\r\n            onChange={onchange}\r\n            value={formData.title}\r\n          />\r\n          <Form.Field\r\n            id=\"form-input-control-last-name\"\r\n            control={Input}\r\n            label=\"From\"\r\n            placeholder=\"From\"\r\n            name=\"_from\"\r\n            onChange={onchange}\r\n            value={formData._from}\r\n          />\r\n        </Form.Group>\r\n        <Form.Field\r\n          id=\"form-textarea-control-opinion\"\r\n          control={TextArea}\r\n          label=\"Description\"\r\n          placeholder=\"Description\"\r\n          name=\"desc\"\r\n          onChange={onchange}\r\n          value={formData.desc}\r\n        />\r\n        <Form.Field\r\n          id=\"form-input-control-error-email\"\r\n          control={Input}\r\n          label=\"Link\"\r\n          placeholder=\"https://\"\r\n          name=\"link\"\r\n          onChange={onchange}\r\n          value={formData.link}\r\n        />\r\n        <Form.Field\r\n          id=\"form-button-control-public\"\r\n          control={Button}\r\n          content=\"Submit\"\r\n          onClick={handlesubmit}\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Button, Checkbox, Form, Comment, Header } from \"semantic-ui-react\";\r\nimport { postcomment, getcomments, deletecomment } from \"../actions/comments\";\r\nimport { clearmessage } from \"../actions/messages\";\r\nimport { deletecourse } from \"../actions/courseactions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function Course_page() {\r\n  const history = useHistory();\r\n  const comments = useSelector((state) => state.Comment.comments);\r\n  const username = useSelector((state) => state.loginstate.username);\r\n  const message = useSelector((state) => state.Message);\r\n  const dispatch = useDispatch();\r\n  const [formData, setFormData] = useState({ review: \"\" });\r\n  const { slug } = useParams();\r\n  const [course, setCourse] = useState({});\r\n\r\n  useEffect(() => {\r\n    Axios.get(\r\n      `http://127.0.0.1:8000/api/v1/course/${slug}/?format=json`\r\n    ).then((res) => setCourse(res.data));\r\n\r\n    dispatch(getcomments(slug));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (message.status === 400) {\r\n      alert(JSON.stringify(message.msg));\r\n    } else if (message.deletecourse) {\r\n      history.push(\"/\");\r\n    } else {\r\n      setFormData({ review: \"\" });\r\n    }\r\n    dispatch(clearmessage());\r\n  }, [message]);\r\n\r\n  const handelsubmit = () => {\r\n    dispatch(postcomment({ comment: formData.review, course: course.slug }));\r\n  };\r\n\r\n  const onchange = (e, { name, value }) => {\r\n    setFormData((prevstate) => {\r\n      return { ...prevstate, [name]: value };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"course-page\">\r\n      <h2>{course.title}</h2>\r\n\r\n      <p>{course.desc}</p>\r\n\r\n      <Button onClick={() => window.open(course.link, \"_blank\")} size=\"mini\">\r\n        Visit\r\n      </Button>\r\n      {username === course.username && (\r\n        <Button onClick={(e) => history.push(`/edit/${slug}`)} size=\"mini\">\r\n          Edit\r\n        </Button>\r\n      )}\r\n      {username === course.username && (\r\n        <Button onClick={(e) => dispatch(deletecourse(slug))} size=\"mini\">\r\n          Delete\r\n        </Button>\r\n      )}\r\n      <Comment.Group>\r\n        <Header as=\"h3\">Comments</Header>\r\n        <Form>\r\n          <Form.TextArea\r\n            value={formData.review}\r\n            name=\"review\"\r\n            onChange={onchange}\r\n          />\r\n\r\n          <Form.Button primary onClick={handelsubmit}>\r\n            Submit\r\n          </Form.Button>\r\n        </Form>\r\n        {comments.map((c) => (\r\n          <Comment>\r\n            <Comment.Content className=\"comment\">\r\n              <Comment.Author as=\"a\">{c.username}</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>{new Date(c.datetime).toDateString()}</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>{c.comment}</Comment.Text>\r\n              <Comment.Actions>\r\n                {/* <Comment.Action>Reply</Comment.Action> */}\r\n                {username === c.username && (\r\n                  <Comment.Action\r\n                    onClick={(e) => {\r\n                      dispatch(deletecomment(c.id));\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Comment.Action>\r\n                )}\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n        ))}\r\n      </Comment.Group>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  GET_COMMENTS,\r\n  POST_COMMENT,\r\n  DELETE_COMMENT,\r\n  UPDATE_COMMENT,\r\n} from \"./types\";\r\nimport { getTokenConfig } from \"./auth\";\r\nimport Axios from \"axios\";\r\nimport { createMessage, returnErrors } from \"./messages\";\r\n\r\nexport const getcomments = (slug) => (dispatch) => {\r\n  Axios.get(`http://127.0.0.1:8000/api/v1/comment/?course=${slug}&format=json`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_COMMENTS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const postcomment = (comment) => (dispatch, getState) => {\r\n  Axios.post(\r\n    \"http://127.0.0.1:8000/api/v1/comment/\",\r\n    comment,\r\n    getTokenConfig(getState)\r\n  )\r\n    .then((res) => {\r\n      dispatch(createMessage({ postcomment: \"comment posted\" }));\r\n      dispatch({\r\n        type: POST_COMMENT,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const deletecomment = (id) => (dispatch, token) => {\r\n  Axios.delete(\r\n    `http://127.0.0.1:8000/api/v1/comment/${id}/`,\r\n    getTokenConfig(token)\r\n  )\r\n    .then((res) => {\r\n      dispatch(createMessage({ deletecomment: \"comment deleted\" }));\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: DELETE_COMMENT,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n\r\nexport const updatecomment = (slug, comment) => (dispatch, token) => {\r\n  Axios.post(\r\n    `http://127.0.0.1:8000/api/v1/comment/${slug}`,\r\n    comment,\r\n    getTokenConfig(token)\r\n  )\r\n    .then((res) => {\r\n      dispatch(createMessage({ updatecomment: \"comment updated\" }));\r\n      dispatch({\r\n        type: UPDATE_COMMENT,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch(returnErrors(err.response.data, err.response.status))\r\n    );\r\n};\r\n","import React, { Fragment, useEffect } from \"react\";\nimport Navbar from \"./comps/Navbar\";\nimport Content from \"./comps/content\";\nimport Axios from \"axios\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login_register from \"./comps/login_register\";\nimport { Setlogintotrue } from \"./actions/auth\";\nimport { useDispatch } from \"react-redux\";\nimport Postnewcourse from \"./comps/post_new_course\";\nimport Coursepage from \"./comps/course_page\";\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const config = { headers: { Authorization: `Token ${token}` } };\n    if (token) {\n      Axios.get(\"http://127.0.0.1:8000/api/auth/user\", config)\n        .then((res) => {\n          dispatch(\n            Setlogintotrue({ token: token, username: res.data.username })\n          );\n        })\n        .catch((e) => console.log(e));\n    }\n  }, []);\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Fragment>\n          <Switch>\n            <Route exact path=\"/\" component={Content} />\n            <Route exact path=\"/login\" component={Login_register} />\n            <Route exact path=\"/post-course\" component={Postnewcourse} />\n            <Route exact path=\"/edit/:slug\" component={Postnewcourse} />\n            <Route exact path=\"/course/:slug\" component={Coursepage} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  GET_COMMENTS,\r\n  POST_COMMENT,\r\n  DELETE_COMMENT,\r\n  UPDATE_COMMENT,\r\n} from \"../actions/types\";\r\n\r\nconst initialstate = { comments: [] };\r\n\r\nexport default function (state = initialstate, action) {\r\n  switch (action.type) {\r\n    case GET_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.payload,\r\n      };\r\n    case DELETE_COMMENT:\r\n      return {\r\n        ...state,\r\n        comments: state.comments.filter(\r\n          (comment) => comment.id !== action.payload.id\r\n        ),\r\n      };\r\n    case POST_COMMENT:\r\n      return {\r\n        ...state,\r\n        comments: [...state.comments, action.payload],\r\n      };\r\n    case UPDATE_COMMENT:\r\n      return {\r\n        ...state,\r\n        comments: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_COURSES,\r\n  POST_COURSE,\r\n  DELETE_COURSE,\r\n  UPDATE_COURSE,\r\n} from \"../actions/types\";\r\n\r\nconst initialstate = {};\r\n\r\nexport default function (state = initialstate, action) {\r\n  switch (action.type) {\r\n    case GET_COURSES:\r\n      return {\r\n        ...state,\r\n        courses: action.payload,\r\n      };\r\n    case DELETE_COURSE:\r\n      return {\r\n        ...state,\r\n        courses: state.courses.filter((course) => course.id !== action.payload),\r\n      };\r\n    case POST_COURSE:\r\n      return {\r\n        ...state,\r\n        courses: [...state.courses, action.payload],\r\n      };\r\n    case UPDATE_COURSE:\r\n      return {\r\n        ...state,\r\n        courses: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  combineReducers\r\n} from \"redux\";\r\nimport Auth from \"./auth\";\r\nimport Comment from './comment'\r\nimport Message from './message'\r\nimport Course from './course'\r\n\r\nexport default combineReducers({\r\n  loginstate: Auth,\r\n  Course,\r\n  Comment,\r\n  Message,\r\n});","import { Setloginfalse, Setlogintrue } from \"../actions/types\";\r\n\r\nexport default function (\r\n  state = { state: false, token: \"\", username: \"\" },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case Setlogintrue: {\r\n      return {\r\n        state: true,\r\n        token: action.payload.token,\r\n        username: action.payload.username,\r\n      };\r\n    }\r\n\r\n    case Setloginfalse: {\r\n      localStorage.removeItem(\"token\");\r\n      return { state: false, token: \"\", username: \"\" };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CREATE_MESSAGE, GET_ERRORS, CLEAR_MESSAGE } from \"../actions/types\";\r\n\r\nconst initialState = \"\";\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_MESSAGE:\r\n      return (state = action.payload);\r\n    case GET_ERRORS:\r\n      return (state = action.payload);\r\n    case CLEAR_MESSAGE:\r\n      return \"\";\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}